<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teches on Happiness Development</title>
    <link>https://mj-seok.com/tech/</link>
    <description>Recent content in Teches on Happiness Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jun 2020 22:34:26 +0900</lastBuildDate>
    
	<atom:link href="https://mj-seok.com/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Erwin</title>
      <link>https://mj-seok.com/tech/erwin/</link>
      <pubDate>Wed, 03 Jun 2020 22:34:26 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/erwin/</guid>
      <description>ERwin 공부  Model 탭 - Logical / Physical - IE 방식 표현  기본 Entities 생성  좌측 Entities - 우 클릭 후 New 우측 도구상자에서 엔티티 버튼(사각형)  Entity 설정  사각형 위쪽 - 타입의 이름 설정 Tab - Key Attribute Tab - Attribute Enter - Next Attribute  관계  엔티티와 엔티티 사이의 선으로 표현 Relationships - New  Parent Child Identifying Non Identifying    </description>
    </item>
    
    <item>
      <title>사무행정과 한글</title>
      <link>https://mj-seok.com/tech/hangul/</link>
      <pubDate>Mon, 30 Mar 2020 21:27:15 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/hangul/</guid>
      <description>행정이란?  행정 : 광의와 협의 정부, 기업이나 모든 조직은 목표를 달성하기 위해 관리를 합니다. 광의 : Administration 관리 협의 : Public NGO 공익  협의의 행정  행정의 정의가 구체화 됩니다. 기업이 아니라 정부가 하는 활동, 이익이 아니라 공익을 추구하는 활동 행정은 경영과 다릅니다. 공사 행정 이원론, 정치 행정 일원론  거버넌스(Governance)  거버넌스(Governance) : Govern(통치하다)에서 파생, 협치라는 의미 Government : 통치 정부 - 시장 - 시민사회 신뢰, 네트워크, 투명성 중요하게 여겨지는 가치  사무 행정 업무 수행 계획  하는 일들에 대해 계획 어떤 역할을 수행할 수 있을지 예) 민원 응대를 어떻게 구체적으로 대응할 것인지 추진하고 있는 방향성과 사업 계획 단기간의 포부 장기간의 포부  한글 문서 - 문단 나누기와 줄 바꿈  문단 나누기 : Enter 엔터 줄 바꿈 : Shift 쉬프트 + Enter 엔터  여러 기능  눈금자 10px - 2.</description>
    </item>
    
    <item>
      <title>Elastic Search</title>
      <link>https://mj-seok.com/tech/es-1/</link>
      <pubDate>Wed, 19 Feb 2020 13:48:33 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/es-1/</guid>
      <description>Elastic Search  검색 및 분석 엔진 Logstash 와 Beats가 데이터 수집, 통합, 저장 Kibana 데이터 탐색, 시각화, 영감 공유 및 스택 모니터링 인덱싱, 검색, 분석을 강점으로 합니다.  데이터  문서 저장소입니다. 컬럼 로우로 저장하지 않고, JSON 문서로 시리얼라이즈해서 저장합니다. inverted index 자료 구조를 사용하여 거의 1초이내에 검색합니다.  </description>
    </item>
    
    <item>
      <title>Java Programming Language</title>
      <link>https://mj-seok.com/tech/java-1/</link>
      <pubDate>Wed, 19 Feb 2020 13:10:18 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/java-1/</guid>
      <description>Java Programming Language  특징  고수준 언어 간결합니다. 아키텍처 중립 객체 지향 멀티쓰레드    Software Development Process MyProgram.java - compiler -&amp;gt; MyProgram.class - Java VM -&amp;gt; My Program
 가상 머신 덕분에 다양한 플랫폼에서 동작 가능합니다. JAVA Application Programming Interface (API) Java Virtual Machine   플랫폼 독립전인 만큼 네이티브 코드보단 느릴 수 있지만 최근 기술 개선을 많이 이루어서 거의 비슷한 성능까지 끌어올렸다고 합니다.
 Java로 할 수 있는 것  개발 툴 : 컴파일, 러닝, 모니터링, 디버깅, 문서화 API : 애플리케이션에 사용할 수 있도록 만들어진 핵심 기능 및 유용한 클래스들 배포 기술 : 표준 구조 제공 유저 인터페이스 툴킷 : JavaFX, Swing등 통합 라이브러리 : 대표적으로 DB연결 라이브러리 등  Java가 돕는 것  쉽게 시작하게 합니다 적은 코드를 쓰게 합니다.</description>
    </item>
    
    <item>
      <title>Webpack 개념</title>
      <link>https://mj-seok.com/tech/webpack-intro/</link>
      <pubDate>Fri, 14 Feb 2020 17:13:46 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/webpack-intro/</guid>
      <description>[Reference] : https://webpack.js.org/concepts/
Webpack 개념  모던 자바스크립트 애플리케이션을 위한 정적 모듈 번들러  핵심 개념  Entry (시작점) Output (출력) Loaders (로더) Plugins (플러그인) Mode (모드) Browser Compatibility (브라우저 호환성)  Entry  entry point : 내부 의존성 그래프가 빌드하기 시작하는 지점을 표기   webpack.config.js
 module.exports = { entry: &amp;#39;./path/to/my/entry/file.js&amp;#39; }; Output  output : 번들된 곳을 방출하는 위치   webpack.config.js
 const path = require(&amp;#39;path&amp;#39;); module.</description>
    </item>
    
    <item>
      <title>Spring boot와 React.js의 만남 - 프론트엔드</title>
      <link>https://mj-seok.com/tech/spring-react-2/</link>
      <pubDate>Thu, 23 Jan 2020 10:28:36 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/spring-react-2/</guid>
      <description>Spring boot(백엔드)와 React.js(프론트엔드)의 만남 - 프론트엔드 1단계 UI Controller를 만들어봅시다.(Spring MVC Controller) package com.mjseok.springreact; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMapping; @Controller public class HomeController { @RequestMapping(value = &amp;#34;/&amp;#34;) public String index() { return &amp;#34;index&amp;#34;; } }  @Controller : Spring MVC Controller인 class에 마크합니다. @RequestMapping : index() 메소드에 / route를 도와줍니다. &amp;quot;index&amp;quot; template return =&amp;gt; 뷰 리졸버가 src/main/resources/templates/index.html 를 매핑합니다.  2단계 HTML 템플릿 만들기  src/main/resources/templates/index.html
 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html xmlns:th=&amp;#34;https://www.thymeleaf.org&amp;#34;&amp;gt; &amp;lt;head lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;/&amp;gt; &amp;lt;title&amp;gt;ReactJS + Spring Data REST&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;/main.</description>
    </item>
    
    <item>
      <title>Spring boot와 React.js의 만남 - 백엔드</title>
      <link>https://mj-seok.com/tech/spring-react/</link>
      <pubDate>Wed, 22 Jan 2020 18:06:35 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/spring-react/</guid>
      <description>Spring boot(백엔드)와 React.js(프론트엔드)의 만남 [ Reference ] : https://spring.io/guides/tutorials/react-and-spring-data-rest/
[ Spring Initializr ] : https://start.spring.io/
1단계 Spring Initializr 아래의 Dependencies 를 추가해서 Generate 합니다.
 Rest Repositories Thymeleaf JPA H2  만들어진 스프링 프로젝트를 압축해제 합니다.
2단계 첫 java 파일 IDE로 스프링프로젝트를 엽니다.
 Spring Data REST 를 사용하므로 간편하게 작업할 수 있습니다.  domain 선언  Employee.java
 package com.mjseok.springreact; import java.util.Objects; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.Id; @Entity public class Employee { private @Id @GeneratedValue Long id; private String firstName; private String lastName; private String description; private Employee() {} public Employee(String firstName, String lastName, String description) { this.</description>
    </item>
    
    <item>
      <title>AWS 키 페어 복구하기 - AWS Reset Key Pair</title>
      <link>https://mj-seok.com/tech/aws-reset-key/</link>
      <pubDate>Mon, 13 Jan 2020 12:29:26 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/aws-reset-key/</guid>
      <description>AWS 키 페어 복구하기 - AWS Reset Key Pair [Reference] : https://bactoria.github.io/2019/09/08/EC2-%ED%82%A4%ED%8E%98%EC%96%B4-%EB%B6%84%EC%8B%A4%ED%96%88%EC%9D%84-%EB%95%8C-%ED%95%B4%EA%B2%B0%EB%B2%95/
1. 인스턴스 이미지 생성  인스턴스 카테고리의 인스턴스 메뉴 클릭 - 복구할 인스턴스 오른쪽 클릭 - 이미지 - 이미지 생성  2. 이미지 시작하기 (새 인스턴스 만들기)  이미지 카테고리의 AMI 메뉴 클릭 - 시작하기 - 검토 및 시작  이 때 만들어지는 key pair pem 파일을 잘 간수합니다.
3. 기존 EC2 인스턴스 중지  인스턴스 카테고리의 인스턴스 메뉴 클릭 - 복구할 인스턴스 오른쪽 클릭 - 인스턴스 상태 - 중지  4.</description>
    </item>
    
    <item>
      <title>Python - for in 문법</title>
      <link>https://mj-seok.com/tech/python-for/</link>
      <pubDate>Wed, 01 Jan 2020 17:51:58 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/python-for/</guid>
      <description>Python - for in 문법 Reference : https://youtu.be/0wpYyDlAEIg
 array, list, tuple, string 의 시퀀스를 출력  days = (&amp;#34;Mon&amp;#34;, &amp;#34;Tue&amp;#34;, &amp;#34;Wed&amp;#34;, &amp;#34;Thu&amp;#34;, &amp;#34;Fri&amp;#34;) for day in days: print(day) for day in [1, 2, 3, 4, 5]: print(day) for day in days: if day is &amp;#34;Wed&amp;#34;: break else: print(day) for letter in &amp;#34;Nicolas&amp;#34;: print(letter)   행복 코딩
 </description>
    </item>
    
    <item>
      <title>Hugo로 개인 블로그 만들기 &#43; git submodule</title>
      <link>https://mj-seok.com/tech/git-submodule/</link>
      <pubDate>Mon, 30 Dec 2019 22:37:32 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/git-submodule/</guid>
      <description>Hugo로 개인 블로그 만들기 + git submodule  https://gohugo.io/
  Hugo는 &amp;ldquo;웹사이트를 만드는데 세계에서 가장 빠른 프레임워크&amp;quot;라고 단언하는
오픈소스 기반 정적 사이트(static site) 제작 툴입니다.   Hugo 설치 (Install Hugo) git Command Hugo Post  1. Hugo 설치 (Install Hugo)  https://gohugo.io/getting-started/quick-start/
 MacOS 기준 (for MacOS)
Hugo 설치 (Install Hugo) brew install hugo Hugo 버전 확인 (check Hugo&amp;rsquo;s version) hugo version Hugo 사이트 만들기 (Create a new Hugo site) hugo new site quickstart Hugo 테마 추가하기 (Add a Theme) cd quickstart git init git submodule add https://github.</description>
    </item>
    
    <item>
      <title>고로 작성해봐요 - Write in Go</title>
      <link>https://mj-seok.com/tech/go-first/</link>
      <pubDate>Mon, 30 Dec 2019 22:27:58 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/go-first/</guid>
      <description>고로 작성해봐요 - Write in Go 안녕, 고 (Hello, Go) package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;Hello, Go&amp;#34;) } Go 언어 설치 (Install Go Language) https://golang.org/
Go 설치 후 go tour 시작 코드 (After installing, go tour code) % go get code.google.com/p/go-tour/gotour 패키지 (Packages) package main import ( &amp;#34;fmt&amp;#34; &amp;#34;math/rand&amp;#34; ) func main() { fmt.Println(&amp;#34;My favorite number is&amp;#34;, rand.Intn(10)) }  모든 Go 프로그램은 패키지로 구성 (Every Go Program is made up of packages) import () 형태로 패키지를 불러옵니다.</description>
    </item>
    
    <item>
      <title>Python 가상환경 - pyenv 설치</title>
      <link>https://mj-seok.com/tech/python-pyenv/</link>
      <pubDate>Mon, 23 Dec 2019 21:24:34 +0900</pubDate>
      
      <guid>https://mj-seok.com/tech/python-pyenv/</guid>
      <description>Python 가상환경 - pyenv 설치  mac 기준, Homebrew를 사용해서 설치합니다.
 설치 % brew update % brew install pyenv 환경설정 % echo &amp;#39;export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc % echo &amp;#39;export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc % echo -e &amp;#39;if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then\n eval &amp;#34;$(pyenv init -)&amp;#34;\nfi&amp;#39; &amp;gt;&amp;gt; ~/.zshrc Python 원하는 버전 설치 % pyenv install [version_name] % pyenv global [version_name] % python --version   행복 개발
 </description>
    </item>
    
  </channel>
</rss>