<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cs on Happiness Development</title>
    <link>https://mj-seok.com/cs/</link>
    <description>Recent content in Cs on Happiness Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Mar 2020 08:58:55 +0900</lastBuildDate>
    
	<atom:link href="https://mj-seok.com/cs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>애자일 방법론 - Agile Method</title>
      <link>https://mj-seok.com/cs/agile/</link>
      <pubDate>Fri, 20 Mar 2020 08:58:55 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/agile/</guid>
      <description>애자일 방법론 - Agile Method 1. eXtreme Programming(XP)
2. Scrum
프로세스 선택 시 고려해야 될 특징(Characteristic)
1. eXtreme Programming(XP)  소규모 ~ 중간규모 팀이 빠른 요구사항 변화에 반응하여 개발하는 경량 소프트웨어 개발 방법론 여러 practice를 적용하게 간단하게 개발할 수 있음.  12 Practices  The Planning Game : 개발자와 고객 간 role game, 어떻게 이 시스템을 사용할 것인가? Small Releases : 짧은 개발 Lifecycle 동안 어떻게 scope를 정하여 소프트웨어를 인계할 것인가?</description>
    </item>
    
    <item>
      <title>데이터 통신</title>
      <link>https://mj-seok.com/cs/network/</link>
      <pubDate>Thu, 19 Mar 2020 14:29:33 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/network/</guid>
      <description>데이터 통신 1. 정의
2. 정보통신의 발전
3. 데이터 통신 시스템의 구성 요소
4. 데이터 전송기술
1. 정의  컴퓨터에 의한 정보처리기술과 데이터 전송 기술이 통합된 형태  데이터 통신 = 데이터 전송 + 데이터 처리    2. 정보통신의 발전  Morse(1844) : 전신, 전기통신의 시초 Bell(1876) : 전화 발명, 음성 통신 텔레타이프회선에 의한 데이터 통신(1940) ENIAC 개발(1946) EDSAC 개발(1950) UNIVAC-1 개발(1951) SAGE(1958) : Semi-Automatic Ground Environment  세계 최초의 데이터 통신, 반자동 방공 시스템(군사용)   SABRE(1961) : Semi-Automatic Business Research Environment  세계 최초의 상업용 데이터 통신 아메리칸 항공사의 좌석예약 및 회계 업무 시스템   CTSS(1963)  Compatible Time Sharing System 최초의 실험용 시분할 시스템   MULTICS  Multiplex of Information and Computing Service CTSS를 발전시킨 시스템   ARPA 네트워크(1968)  Advanced Research Project Agency 최초의 패킷 교환(Packet Switching) 시스템 인터넷의 효시   ALOHA 시스템(1968)  Addictive Links Online Hawaii Area 최초의 무선 패킷 교환망   SNA(1974)  System Network Architecture IBM이 발표한 컴퓨터 시스템을 이용한 통신망을 구축하는 통신망 구조   TELNET, TYNET(1975)  상업용 패킷 교환 데이터 통신 시스템   GE Mark -1  상업용 시분할 시스템    3.</description>
    </item>
    
    <item>
      <title>유닉스 Unix</title>
      <link>https://mj-seok.com/cs/unix/</link>
      <pubDate>Thu, 19 Mar 2020 11:23:27 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/unix/</guid>
      <description>유닉스 Unix 1. 유닉스의 특징
2. 유닉스의 구성요소
3. 유닉스의 파일 시스템
4. 디스크 블록 구조
5. 유닉스 명령어
1. 유닉스의 특징  대화형 시스템 다중사용자 시스템 다중 작업용 시스템 높은 이식성과 확장성 제공 계층적 트리 파일 시스템  2. 유닉스의 구성요소  커널 : 프로세스 관리, 메모리 관리, 파일 시스템 관리, 장치 관리 등 컴퓨터의 모든 자원을 초기화하고 제어하는 기능을 수행 함. 셸 : 사용자와 커널 사이의 중간자 역할을 담당하는 프로그램으로 사용자가 입력한 명령을 해석하여 커널에 넘겨줌.</description>
    </item>
    
    <item>
      <title>디스크 관리</title>
      <link>https://mj-seok.com/cs/disk/</link>
      <pubDate>Thu, 19 Mar 2020 11:12:01 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/disk/</guid>
      <description>1. 디스크 할당 방법
1. 디스크 할당 방법  디스크의 빈 공간 관리  비트 벡터  빈 공간 리스트는 비트맵(bit map) 또는 비트벡터(bit vector)로서 구현 블록이 비어있으면 0, 블록이 할당되어 있으면 1   연결 리스트  모든 빈 디스크 블록들을 함꼐 연결 첫 번째 빈 블록 안에 다음의 빈 디스크 블록의 포인터를 갖고 있음.     연속 할당(Contiguous Allocation)  파일들이 디스크의 연속적인 주소들의 집합에 할당되는 방식 파일에 접근할 때 필요한 디스크 탐색의 횟수는 최소화될 수 있음 새로운 파일을 위해 빈 공간을 찾는 것은 어려움 전체 디스크 공간이 요구량을 만족하여도, 연속된 공간이 아니면 외부 단편화 발생 주기적인 압축이 필요   연결 할당 (Linked Allocation)  각 파일들이 디스크 블록들의 리스트에 연결 디스크 블록들은 디스크 전체에 분산 디렉터리는 파일의 첫 번째와 마지막 블록의 포인터를 가짐 외부 단편화 발생하지 않음 직접 액세스 기능을 지원할 수 없음 포인터를 위한 기억공간이 필요함   인덱스 할당  연결할당은 연속할당의 외부 단편화를 해결했으나 직접 액세스를 지원할 수 없고 블록들의 포인터가 디스크 전체에 분산되어 있음 인덱스 할당은 모든 포인터들을 하나의 장소, 즉 인덱스 블록으로 관리하여 직접 액세스를 지원함    </description>
    </item>
    
    <item>
      <title>입출력 처리 방식 - I/O Process Method</title>
      <link>https://mj-seok.com/cs/process/</link>
      <pubDate>Thu, 12 Mar 2020 13:07:06 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/process/</guid>
      <description>입출력 처리 방식 - I/O Process Method  폴링 방식 인터럽트 방식  1. 폴링 방식  데이터 링크 확립 방식의 하나입니다. 분기 방식을 사용하고 있는 시스템에서 각 단말에서의 송신을 제어하기 위해서 사용되고 있습니다. 이것을 폴링/셀렉팅 방식 또는 폴링/드레싱 방식이라고 합니다.  2. 인터럽트 방식  프로세서(CPU, 중앙처리장치)의 즉각적인 처리를 필요로 하는 이벤트를 알리기 위해 발생하는 주변 하드웨어나 소프트웨어로 부터의 요청을 말합니다. 인터럽트가 발생하면 그 순간 운영체계 내의 제어프로그램에 있는 인터럽트 루틴이 작동하며 응급사태를 해결하고 인터럽트가 생기기 이전의 상태로 복귀시킵니다.</description>
    </item>
    
    <item>
      <title>컴퓨터 보안 - Computer Security</title>
      <link>https://mj-seok.com/cs/security/</link>
      <pubDate>Thu, 12 Mar 2020 12:59:01 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/security/</guid>
      <description>컴퓨터 보안 - Computer Security  가상사설망(VPN) 패스워드 관리 안드로이드 보안  1. 가상사설망(VPN)  인터넷 같은 공중망을 사용하여 사설망을 구축하게 해주는 기술 또는 통신망 인터넷이라는 공중망을 기본으로 하기 때문에 적절한 통신속도 및 대역폭에 대해 보장이 필요합니다. 확실한 정보보호를 위한 암호화 기술과 전자인증 기술이 핵심 구현 기술입니다.   데이터 암호화, 접근제어, 터널링
 2. 패스워드 관리  주 컴퓨터의 운영체제(OS), 데이터베이스관리시스템(DBMS)에 의하여 관리됩니다. 일반적으로 7문자 이상의 영문자와 숫자의 조합으로 구성되어 지정됩니다.</description>
    </item>
    
    <item>
      <title>컴퓨터 포렌식 (Computer Forensics)</title>
      <link>https://mj-seok.com/cs/forensics/</link>
      <pubDate>Thu, 12 Mar 2020 12:53:49 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/forensics/</guid>
      <description>컴퓨터 포렌식 (Computer Forensics)  컴퓨터 법의학 또는 디지털 포렌식 -전자적 증거물 등을 사법기관에 제출하기 위해 데이터를 수집, 분석, 보고서를 작성하는 일련의 작업  포렌식의 유형  네트워크 포렌식이란  네트워크에서 디지털 증거를 수집하고 분석하여 법정에 제출하는 일련의 과정 인터넷을 통하여 발생하는 범죄에 대한 디지털 증거를 수집하고 분석하는 것   이메일 포렌식  이메일 데이터로부터 송수신자, 보낸 및 받은 시간, 내용 등의 증거 획득 및 분석   웹 포렌식  웹 브라우저를 통한 쿠키, 히스토리, 임시파일, 설정 정보 등을 통해 사용 흔적 분석   안티 포렌식  데이터의 완전삭제, 암호화, 스테가노그래피 등을 의미합니다.</description>
    </item>
    
    <item>
      <title>웹사이트 및 브라우저 주요 공격 유형</title>
      <link>https://mj-seok.com/cs/hacking-series/</link>
      <pubDate>Thu, 12 Mar 2020 12:50:44 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/hacking-series/</guid>
      <description>웹사이트 및 브라우저 주요 공격 유형  크로스사이트 요청 위조 크로스사이트 스크립팅 SQL 인젝션 비트플리핑 공격  크로스사이트 요청 위조  새로운 공격은 아니지만, 간단하고 매우 위협적인 공격입니다. 로그인한 피해자의 브라우저가 취약한 웹 애플리케이션에 요청을 보내도록 하여 피해자 대신 선택된 작동을 수행하도록 합니다. 특별한 공격 포인트가 없습니다. HTTP 트래픽 변조하지 않고, 문자나 인코딩 기법을 사용하지 않습니다. 브라우저에서 사용자 몰래 요청이 일어나게 강제하는 공격입니다.  </description>
    </item>
    
    <item>
      <title>레지스터와 RAM 과 중앙처리장치 CPU</title>
      <link>https://mj-seok.com/cs/cs-ram/</link>
      <pubDate>Mon, 02 Mar 2020 15:59:54 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/cs-ram/</guid>
      <description>Arithmetic and Logic Unit(ALU)  이진수를 입력받아 계산  레지스터와 RAM  AND-OR LATCH GATED LATCH 레지스터: 래치를 병렬로 사용하는 그룹  멀티플렉서  행 담당 열 담당 선택 SRAM(Static Random Access Memory)  Central Process Unit (CPU)  MICRO-ARCHITECTURE RAM : 16공간 x 8bit Register : 8bit x 4개 INSTRUCTION TABLE : id, opcode, address  레지스터 구성  Instruction Address Register Instruction Register Register A Register B Register C Register D  Instruction Table  Instruction / Description / 4-Bit Opcode / Address or Registers LOAD_A / Read RAM location (register A) / 0010 / 4-bit RAM address LOAD_B / Read RAM location (register B) / 0001 / 4-bit RAM address STORE_A / Write (register A) RAM location / 0100 / 4-bit RAM address ADD / Add two registers, store result / 1000 / 2-bit register ID, 2-bit register ID  FETCH PHASE (인출 단계)  Instruction Address Register -&amp;gt; ADDRESS INPUT RAM -&amp;gt; DATA -&amp;gt; Instruction Register  Decode Phase (해독 단계)  opcode 첫 4bit RAM 주소 뒤 4bit Instruction Register control unit  Execute Phase (실행 단계)  Load_A : RAM의 write enable 켜기 주소값 : RAM에서 위치에 DATA 값 확인 Load_A : Register A의 write enable 활성화 RAM Data : Register A에 저장 instruction 완성, 모든 연결선 종료 instruction address 레지스터 1증가 execute phase 종료 다음 instruction fetch 준비  Control Unit  Fetch Phase  Inst.</description>
    </item>
    
    <item>
      <title>컴파일러 - Compiler</title>
      <link>https://mj-seok.com/cs/compiler/</link>
      <pubDate>Mon, 02 Mar 2020 15:45:15 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/compiler/</guid>
      <description>컴파일러 과목  course output(CO) 언어번역기(컴파일러)의 필요성과 컴파일러 관련 이론을 습득합니다. 문법 이론과 오토마타 이론을 배웁니다. 어휘분석과 파싱 방법론을 습득합니다. 컴파일러 자동화 도구의 사용법을 배웁니다.  1장 컴파일러 개론    컴파일러와 인터프리터의 차이점을 설명할 수 있습니다.    JIT와 AOT 컴파일을 이해하고 그 필요성을 설명할 수 있습니다.    Preprocessor의 기능과 조건부 컴파일의 필요성을 이해하고, 설명할 수 있습니다.    컴파일러의 일반적인 구조와 주요 기능을 설명할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Develop Process</title>
      <link>https://mj-seok.com/cs/develop-process/</link>
      <pubDate>Mon, 02 Mar 2020 14:50:40 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/develop-process/</guid>
      <description>주요 개발 프로세스  Incremental Model  Divide and conquer 장점 : Waterfall Lifecycle Model과 같은 방식의 한계 극복 value를 분해하여 높은 value의 functionality를 초기 단계에 Increment에 assign함 각 Increment / build 개발 비용 및 기간 예측    Icremental Model    Implement and test first build   핵심 기능을 first increment에 넣어 개발    Implement, integrate and test successive build until product is complete    Maintenance    Spiral Model  리스크가 많은 프로젝트를 개발하는 데 가장 적합한 모델 Risk-Driven Model  리스크의 결과에 따라서 여러 루프가 하나의 phase를 나타냄   PROTOTYPE은 하나의 옵션일 뿐!</description>
    </item>
    
    <item>
      <title>소프트웨어 프로세스 모델 - SW Process Model</title>
      <link>https://mj-seok.com/cs/sw-process/</link>
      <pubDate>Thu, 27 Feb 2020 13:24:19 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/sw-process/</guid>
      <description>소프트웨어 프로세스 모델 - SW Process Model  Process Model  1. Build-and-Fix Model  개발조직의 Process Model을 준수하지 않고, 요구사항 확인 후 바로 코딩으로 들어가는 경우  Ad-hoc Process Model   스펙이나 디자인이 없음   유지보수 시 결함 위치를 발견하기 어려운 모델 개발 시간 및 비용이 많이 듬    사용을 권하지 않으나 현재에도 많은 조직에서 활용 됨     Build First Version : 요구사항으로 First Version을 만듦 Modify until client is satisfied : Client 또는 Customer에게 보여주어 만족시킬 때까지 계속적으로 요구사항을 받아들임 Maintenance : Release한 후 유지보수 함 프로젝트 매니지먼트 관점에서 예측하기 어려운 모델    과연 어떤 행위를 다음에 해야 하는가?</description>
    </item>
    
    <item>
      <title>컴퓨터 과학 - Computer Science</title>
      <link>https://mj-seok.com/cs/cs-1/</link>
      <pubDate>Sat, 15 Feb 2020 18:40:43 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/cs-1/</guid>
      <description>컴퓨터 과학 - Computer Science  2500년 전 주판 : 계산의 상태 기록 1600년 대 : 컴퓨터 직업에 대한 표현 1800년 대 : 컴퓨터 기계로 표현  계전기  릴레이, 수도꼭지같이 열었다 닫았다 합니다. 컴퓨터 버그 - 진기 기계씩 릴레이 기계에 붙어있는 벌레  열 이온 밸브(진공관)  다이오드 : 한쪽으로 호르는 전기 전자 기계식 컴퓨팅 -&amp;gt; 전자 컴퓨팅 ENIAC : 전자 컴퓨터 시작 트랜지스터 : 전류를 흐르게 하거나 멈추게 합니다.</description>
    </item>
    
    <item>
      <title>선형대수학(Linear Algebra) - 벡터(Vector) 와 튜플(Tuple)</title>
      <link>https://mj-seok.com/cs/math-linearalgebra/</link>
      <pubDate>Wed, 01 Jan 2020 17:22:01 +0900</pubDate>
      
      <guid>https://mj-seok.com/cs/math-linearalgebra/</guid>
      <description>선형대수학(Linear Algebra) - 벡터(Vector) 와 튜플(Tuple) [ Reference ] : https://youtu.be/br7tS1t2SFE
 프론트엔드의 다양한 애니메이션과 프로그래밍에서 다양하게 응용된다는 선형대수학! 벡터 공간, 벡터, 선형 변환, 행렬, 연립 선형 방정식등을 연구하는 대수학의 한 분야라고 합니다.  벡터 Vector  크기 magnitud 방향 direction  속도(speed) - 5mph (크기) : 스칼라(scalar)
속력(velocity) - 동쪽 (east) 5mph (크기) : 벡터(vector)
v = (5, 0) = [5] [0] 길이 : 5 v = (3, 4) = [3] [4] 길이 : 5 (피타고라스 3^2 + 4^2 = 5^2) 튜플 Tuple |R R^2 실수좌표공간 Real Coordinate Space  실수값을 가지는 모든 2-튜플 튜플 : 순서가 정해진 리스트  R^3 : 3D real Coordinate space x = [0 0 0] b = [-1 5 2] c = [i(허수) 0 1]  R^n : n - dimensional real coordinate space   </description>
    </item>
    
  </channel>
</rss>